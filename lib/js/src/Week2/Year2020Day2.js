// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

var input = Fs.readFileSync("input/Week2/Year2020Day2.txt", "utf8");

var db = Belt_List.fromArray(Belt_Array.keep(Belt_Array.map(Belt_Array.map(input.split("\n"), (function (p) {
                    return p.split(/[- :]/g);
                  })), (function (p) {
                if (p.length !== 5) {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
                var min = p[0];
                if (min === undefined) {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
                var max = p[1];
                if (max === undefined) {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
                var letter = p[2];
                if (letter === undefined) {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
                var match = p[3];
                if (match === undefined) {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
                var pw = p[4];
                if (pw !== undefined) {
                  return {
                          min: Belt_Option.getWithDefault(Belt_Int.fromString(min), -1),
                          max: Belt_Option.getWithDefault(Belt_Int.fromString(max), -1),
                          letter: letter,
                          pw: pw.trim()
                        };
                } else {
                  return {
                          min: -1,
                          max: -1,
                          letter: "/",
                          pw: ""
                        };
                }
              })), (function (p) {
            return p.min !== -1;
          })));

console.log(Belt_List.length(Belt_List.keep(Belt_List.map(db, (function (param) {
                    var letter = param.letter;
                    var countLetter = function (a, b) {
                      if (b === letter) {
                        return a + 1 | 0;
                      } else {
                        return a;
                      }
                    };
                    var cnt = Belt_Array.reduce(param.pw.split(""), 0, countLetter);
                    return [
                            param.min,
                            param.max,
                            cnt
                          ];
                  })), (function (r) {
                var cnt = r[2];
                if (r[0] <= cnt) {
                  return r[1] >= cnt;
                } else {
                  return false;
                }
              }))));

console.log(Belt_List.length(Belt_List.keep(Belt_List.map(db, (function (param) {
                    var pw = param.pw;
                    return [
                            pw[param.min - 1 | 0],
                            pw[param.max - 1 | 0],
                            param.letter
                          ];
                  })), (function (r) {
                var letter = r[2];
                var l = r[1];
                var f = r[0];
                if (f === letter || l === letter) {
                  return !(f === letter && l === letter);
                } else {
                  return false;
                }
              }))));

exports.input = input;
exports.db = db;
/* input Not a pure module */
