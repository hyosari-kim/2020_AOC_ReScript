// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");

var input = Fs.readFileSync("input/Week2/Year2020Day2.txt", "utf8");

var db = Belt_List.keepMap(Belt_List.keepMap(Belt_List.fromArray(input.split("\n")), (function (r) {
            var match = Belt_List.fromArray(r.split(":"));
            if (!match) {
              return ;
            }
            var match$1 = match.tl;
            if (match$1 && !match$1.tl) {
              return [
                      match.hd,
                      match$1.hd.trim()
                    ];
            }
            
          })), (function (r) {
        var match = Belt_List.fromArray(r[0].split(" "));
        if (!match) {
          return ;
        }
        var match$1 = match.tl;
        if (match$1 && !match$1.tl) {
          return {
                  policy: [
                    match.hd,
                    match$1.hd
                  ],
                  pw: r[1]
                };
        }
        
      }));

console.log(Belt_List.length(Belt_List.keep(Belt_List.map(db, (function (param) {
                    var policy = param.policy;
                    var letter = policy[1];
                    var countLetter = function (a, b) {
                      if (b === letter) {
                        return a + 1 | 0;
                      } else {
                        return a;
                      }
                    };
                    var cnt = Belt_Array.reduce(param.pw.split(""), 0, countLetter);
                    return [
                            policy,
                            cnt
                          ];
                  })), (function (r) {
                var cnt = r[1];
                var match = Belt_List.fromArray(r[0][0].split("-"));
                if (!match) {
                  return false;
                }
                var match$1 = match.tl;
                if (!match$1) {
                  return false;
                }
                if (match$1.tl) {
                  return false;
                }
                var match$2 = Belt_Int.fromString(match.hd);
                var match$3 = Belt_Int.fromString(match$1.hd);
                if (match$2 !== undefined && match$3 !== undefined && match$2 <= cnt) {
                  return match$3 >= cnt;
                } else {
                  return false;
                }
              }))));

console.log(Belt_List.length(Belt_List.keep(Belt_List.map(db, (function (param) {
                    var policy = param.policy;
                    var letter = policy[1];
                    var pw = param.pw;
                    var match = Belt_List.fromArray(policy[0].split("-"));
                    if (!match) {
                      return [
                              "",
                              "",
                              letter
                            ];
                    }
                    var match$1 = match.tl;
                    if (!match$1) {
                      return [
                              "",
                              "",
                              letter
                            ];
                    }
                    if (match$1.tl) {
                      return [
                              "",
                              "",
                              letter
                            ];
                    }
                    var match$2 = Belt_Int.fromString(match.hd);
                    var match$3 = Belt_Int.fromString(match$1.hd);
                    if (match$2 !== undefined && match$3 !== undefined) {
                      return [
                              pw[match$2 - 1 | 0],
                              pw[match$3 - 1 | 0],
                              letter
                            ];
                    } else {
                      return [
                              "",
                              "",
                              letter
                            ];
                    }
                  })), (function (r) {
                var letter = r[2];
                var l = r[1];
                var f = r[0];
                if (f === letter || l === letter) {
                  return !(f === letter && l === letter);
                } else {
                  return false;
                }
              }))));

exports.input = input;
exports.db = db;
/* input Not a pure module */
