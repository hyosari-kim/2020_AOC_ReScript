// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_format = require("rescript/lib/js/caml_format.js");

var input = Fs.readFileSync("input/Week2/Year2020Day2.txt", "utf8");

var db = Belt_List.map(Belt_List.fromArray(input.split("\n")), (function (r) {
        var match = Belt_List.fromArray(r.split(":"));
        if (match) {
          var match$1 = match.tl;
          if (match$1) {
            var p = Belt_List.fromArray(match.hd.split(" "));
            var policy;
            if (p) {
              var match$2 = p.tl;
              if (match$2) {
                policy = {
                  p: Belt_List.fromArray(p.hd.split("-")),
                  letter: match$2.hd
                };
              } else {
                throw {
                      RE_EXN_ID: "Match_failure",
                      _1: [
                        "Year2020Day2.res",
                        48,
                        14
                      ],
                      Error: new Error()
                    };
              }
            } else {
              throw {
                    RE_EXN_ID: "Match_failure",
                    _1: [
                      "Year2020Day2.res",
                      48,
                      14
                    ],
                    Error: new Error()
                  };
            }
            return {
                    policy: policy,
                    pw: match$1.hd.trim()
                  };
          }
          throw {
                RE_EXN_ID: "Match_failure",
                _1: [
                  "Year2020Day2.res",
                  40,
                  8
                ],
                Error: new Error()
              };
        }
        throw {
              RE_EXN_ID: "Match_failure",
              _1: [
                "Year2020Day2.res",
                40,
                8
              ],
              Error: new Error()
            };
      }));

console.log(Belt_List.length(Belt_List.keep(db, (function (r) {
                var policy = r.policy;
                var letter = policy.letter;
                var p = policy.p;
                if (p) {
                  var minNum = Caml_format.caml_int_of_string(p.hd);
                  var maxNum = Caml_format.caml_int_of_string(Belt_List.getExn(p.tl, 0));
                  var count = Belt_Array.reduce(r.pw.split(""), 0, (function (acc, c) {
                          if (c === letter) {
                            return acc + 1 | 0;
                          } else {
                            return acc;
                          }
                        }));
                  if (minNum <= count) {
                    return maxNum >= count;
                  } else {
                    return false;
                  }
                }
                throw {
                      RE_EXN_ID: "Match_failure",
                      _1: [
                        "Year2020Day2.res",
                        67,
                        6
                      ],
                      Error: new Error()
                    };
              }))));

console.log(Belt_List.length(Belt_List.keep(db, (function (r) {
                var policy = r.policy;
                var letter = policy.letter;
                var p = policy.p;
                var pw = r.pw;
                if (p) {
                  var firstPos = Caml_format.caml_int_of_string(p.hd);
                  var lastPos = Caml_format.caml_int_of_string(Belt_List.getExn(p.tl, 0));
                  var firstLetter = pw[firstPos - 1 | 0];
                  var lastLetter = pw[lastPos - 1 | 0];
                  if (firstLetter === letter || lastLetter === letter) {
                    return !(firstLetter === letter && lastLetter === letter);
                  } else {
                    return false;
                  }
                }
                throw {
                      RE_EXN_ID: "Match_failure",
                      _1: [
                        "Year2020Day2.res",
                        103,
                        6
                      ],
                      Error: new Error()
                    };
              }))));

exports.input = input;
exports.db = db;
/* input Not a pure module */
